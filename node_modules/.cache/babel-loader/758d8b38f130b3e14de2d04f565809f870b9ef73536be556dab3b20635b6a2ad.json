{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\pcompass_front\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = {\n  email: 'test@example.com',\n  pw: 'test2323@@@'\n};\nexport default function Login() {\n  _s();\n  const isLogin = useMediaQuery({\n    query: \"(max-width:768px)\"\n  });\n  const [email, setEmail] = useState('');\n  const [pw, setPw] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [pwValid, setPwValid] = useState(false);\n  const [notAllow, setNotAllow] = useState(false);\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    const regex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    if (regex.test(email)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n  const handlePassword = e => {\n    setPw(e.target.value);\n    const regex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&()\\-_=+])(?!.*[^a-zA-Z0-9$`~!@$!%*#^?&()\\-_=+]).{8,20}$/;\n    if (regex.test(pw)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n  const onClickConfirmButton = () => {\n    if (email === User.email && pw === User.pw) {\n      alert('로그인에 성공했습니다.');\n    } else {\n      alert('등록되지 않은 회원입니다');\n    }\n  };\n  useEffect(() => {\n    if (emailValid && pwValid) {\n      setNotAllow(false);\n      return;\n    }\n    setNotAllow(true);\n  }, [emailValid, pwValid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleWrap\",\n      children: [\"\\uC544\\uC774\\uB514\\uC640 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), \"\\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        classNmae: \"inputTitle\",\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          placeholder: \"comsfarmfarm\",\n          value: email,\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: !emailValid && email.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \\uC62C\\uBC14\\uB978 \\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"26px\"\n        },\n        className: \"inputTitle\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          placeholder: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1\",\n          value: pw,\n          onChange: handlePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: !pwValid && pw.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickConfirmButton,\n        disabled: notAllow,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLogin, \" \"]\n  }, void 0, true);\n}\n_s(Login, \"7u3upcWe0nayR0yBEutr+RWzINQ=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useMediaQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","User","email","pw","Login","_s","isLogin","query","setEmail","setPw","emailValid","setEmailValid","pwValid","setPwValid","notAllow","setNotAllow","handleEmail","e","target","value","regex","test","handlePassword","onClickConfirmButton","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","classNmae","type","placeholder","onChange","length","style","marginTop","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/pcompass_front/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {useMediaQuery} from 'react-responsive';\r\n\r\nconst User = {\r\n    email: 'test@example.com',\r\n    pw: 'test2323@@@'\r\n}\r\n\r\n\r\nexport default function Login() {\r\n    const isLogin = useMediaQuery({\r\n        query : \"(max-width:768px)\"\r\n      });\r\n    const [email, setEmail] = useState('');\r\n    const [pw, setPw] = useState(\"\");\r\n\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [pwValid, setPwValid] = useState(false);\r\n    const [notAllow, setNotAllow] = useState(false);\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n        const regex = \r\n            /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n        if(regex.test(email)) {\r\n            setEmailValid(true);\r\n        } else{\r\n            setEmailValid(false);\r\n        }\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setPw(e.target.value);\r\n        const regex = \r\n            /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&()\\-_=+])(?!.*[^a-zA-Z0-9$`~!@$!%*#^?&()\\-_=+]).{8,20}$/;\r\n        if(regex.test(pw)){\r\n            setPwValid(true);\r\n        } else{\r\n            setPwValid(false);\r\n        }\r\n    }\r\n\r\n    const onClickConfirmButton = () => {\r\n        if(email === User.email && pw ===User.pw){\r\n            alert('로그인에 성공했습니다.');\r\n        } else{\r\n            alert('등록되지 않은 회원입니다');\r\n        }   \r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(emailValid && pwValid){\r\n            setNotAllow(false);\r\n            return;\r\n        }\r\n        setNotAllow(true);\r\n    }, [emailValid, pwValid]);\r\n\r\n    return(\r\n        <div className = \"page\">\r\n            <div className=\"titleWrap\">\r\n                아이디와 비밀번호를\r\n                <br/>\r\n                입력해주세요\r\n            </div>\r\n\r\n            <div className=\"contentWrap\">\r\n                <div classNmae=\"inputTitle\">아이디</div>\r\n                <div className=\"inputWrap\">\r\n                    <input \r\n                        type='text'\r\n                        className=\"input\"\r\n                        placeholder=\"comsfarmfarm\"\r\n                        value={email} \r\n                        onChange={handleEmail}\r\n                    />\r\n                </div>\r\n                <div className=\"errorMessageWrap\">\r\n                    {\r\n                        !emailValid && email.length > 0 && (\r\n                            <div> 올바른 아이디를 입력해주세요 </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                \r\n\r\n                <div style={{ marginTop: \"26px\"}} className=\"inputTitle\">\r\n                    비밀번호\r\n                </div>\r\n                <div className=\"inputWrap\">\r\n                    <input \r\n                     type='password'\r\n                     className=\"input\"\r\n                     placeholder=\"영문, 숫자, 특수문자 포함 8자 이상\"\r\n                     value={pw}\r\n                     onChange={handlePassword}\r\n                    />\r\n                </div>\r\n                <div className=\"errorMessageWrap\">\r\n                    {\r\n                        !pwValid && pw.length > 0 && (\r\n                            <div>영문, 숫자, 특수문자 포함 8자 이상 입력해주세요.</div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={onClickConfirmButton} disabled={notAllow} className = \"bottomButton\">\r\n                    확인\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return <>{isLogin} </>\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,aAAa,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,IAAI,GAAG;EACTC,KAAK,EAAE,kBAAkB;EACzBC,EAAE,EAAE;AACR,CAAC;AAGD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGV,aAAa,CAAC;IAC1BW,KAAK,EAAG;EACV,CAAC,CAAC;EACJ,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,EAAE,EAAEM,KAAK,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMsB,WAAW,GAAIC,CAAC,IAAK;IACvBT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxB,MAAMC,KAAK,GACP,8GAA8G;IAClH,IAAGA,KAAK,CAACC,IAAI,CAACnB,KAAK,CAAC,EAAE;MAClBS,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAK;MACFA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAMW,cAAc,GAAIL,CAAC,IAAK;IAC1BR,KAAK,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACrB,MAAMC,KAAK,GACP,sGAAsG;IAC1G,IAAGA,KAAK,CAACC,IAAI,CAAClB,EAAE,CAAC,EAAC;MACdU,UAAU,CAAC,IAAI,CAAC;IACpB,CAAC,MAAK;MACFA,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,IAAGrB,KAAK,KAAKD,IAAI,CAACC,KAAK,IAAIC,EAAE,KAAIF,IAAI,CAACE,EAAE,EAAC;MACrCqB,KAAK,CAAC,cAAc,CAAC;IACzB,CAAC,MAAK;MACFA,KAAK,CAAC,eAAe,CAAC;IAC1B;EACJ,CAAC;EAID7B,SAAS,CAAC,MAAM;IACZ,IAAGe,UAAU,IAAIE,OAAO,EAAC;MACrBG,WAAW,CAAC,KAAK,CAAC;MAClB;IACJ;IACAA,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC,EAAE,CAACL,UAAU,EAAEE,OAAO,CAAC,CAAC;EAEzB,oBACId,OAAA;IAAK2B,SAAS,EAAG,MAAM;IAAAC,QAAA,gBACnB5B,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,yDAEvB,eAAA5B,OAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,wCAET;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENhC,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB5B,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrChC,OAAA;QAAK2B,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtB5B,OAAA;UACIkC,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,OAAO;UACjBQ,WAAW,EAAC,cAAc;UAC1Bd,KAAK,EAAEjB,KAAM;UACbgC,QAAQ,EAAElB;QAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNhC,OAAA;QAAK2B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAEzB,CAAChB,UAAU,IAAIR,KAAK,CAACiC,MAAM,GAAG,CAAC,iBAC3BrC,OAAA;UAAA4B,QAAA,EAAK;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAC9B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEJ,CAAC,eAGNhC,OAAA;QAAKsC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAM,CAAE;QAACZ,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNhC,OAAA;QAAK2B,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtB5B,OAAA;UACCkC,IAAI,EAAC,UAAU;UACfP,SAAS,EAAC,OAAO;UACjBQ,WAAW,EAAC,wFAAuB;UACnCd,KAAK,EAAEhB,EAAG;UACV+B,QAAQ,EAAEZ;QAAe;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNhC,OAAA;QAAK2B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAEzB,CAACd,OAAO,IAAIT,EAAE,CAACgC,MAAM,GAAG,CAAC,iBACrBrC,OAAA;UAAA4B,QAAA,EAAK;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAC1C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENhC,OAAA;MAAA4B,QAAA,eACI5B,OAAA;QAAQwC,OAAO,EAAEf,oBAAqB;QAACgB,QAAQ,EAAEzB,QAAS;QAACW,SAAS,EAAG,cAAc;QAAAC,QAAA,EAAC;MAEtF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;EAGV,oBAAOhC,OAAA,CAAAE,SAAA;IAAA0B,QAAA,GAAGpB,OAAO,EAAC,GAAC;EAAA,eAAE,CAAC;AAC1B;AAACD,EAAA,CA5GuBD,KAAK;EAAA,QACTR,aAAa;AAAA;AAAA4C,EAAA,GADTpC,KAAK;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}